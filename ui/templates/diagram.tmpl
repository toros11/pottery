{{template "headerpart" .}}
<div class="panel panel-default panel-custom" id="diagram_panel">
	<div class="panel-heading">
		<h1 class="panel-title"><span class="glyphicon glyphicon-th-large"></span> <span id="diagram_title"></span></h1>
	</div>
	<div class="panel-body">
		<div id="diagram_canvas"></div>
	</div>
</div>

<script language="javascript">
	(function($) {

		const API_PREFIX = '/v1';

		function getUrlVars() {
			var vars = [], hash;
			var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
			for (var i = 0; i < hashes.length; i++) {
				hash = hashes[i].split('=');
				vars.push(hash[0]);
				vars[hash[0]] = hash[1];
			}
			return vars;
		}

		var diagramType = getUrlVars()["diagram_type"]
		var diagramProperties = {
			physical: {
				title: "Physical Diagram",
				distance: function(force) {
					force.jaccardLinkLengths(70, 0.2);
				}
			},
			"logical": {
				title: "Logical Diagram",
				distance: function(force) {
					force.jaccardLinkLengths(150, 0.2);
				}
			}
		}

		function onUpdateNetworkDiagram() {
			$('#diagram_panel').fadeOut(150, function() {
				$("#diagram_title").text(diagramProperties[diagramType].title);
				$("#diagram_canvas").children().remove();
				$("#diagram_canvas").append('<div id="diagram"></div>');
				$('#diagram_panel').fadeIn(150, function() {
					var diagramInstance = new Diagram('#diagram', API_PREFIX + '/diagrams/' + diagramType, {
						pop: /^([^\s-]+)-/,
						distance: diagramProperties[diagramType].distance,
						width: $("#diagram_canvas").width(),
						height: 900
					});
					diagramInstance.init('interface');
				});
			});
		}

		function onLoad() {
			onUpdateNetworkDiagram();
		}

		var timer = false;
		$(window).resize(function() {
		    if (timer !== false) {
		        clearTimeout(timer);
		    }
		    timer = setTimeout(function() {
		        onUpdateNetworkDiagram();
		    }, 200);
		});

		onLoad();

	})(jQuery);
</script>
{{template "footerpart" .}}
